@using Product.Models

@model Product.Models.ManufactureDetails
   

@{
    ViewBag.Title = "ManufactureDetails";
}

@Styles.Render("~/COntent/form.css")

<h2>Manufacture Details</h2>

<script type="text/javascript">
        function add() {

            //Create an input type dynamically.
            var element = document.createElement("input");

            //Create Labels
            var label = document.createElement("Label");
            label.innerHTML = "Retailer Name";

            //Assign different attributes to the element.
            element.setAttribute("type", "text");
            element.setAttribute("value", "");
            element.setAttribute("name", "name");
            element.setAttribute("style", "width:200px");

            label.setAttribute("style", "font-weight:normal");

            // 'foobar' is the div id, where new fields are to be added
            var foo = document.getElementById("container");

            //Append the element in page (in span).
            foo.appendChild(label);
            foo.appendChild(element);
            //foo.writeln();
           }
</script>


@using (Html.BeginForm("ManufactureDetails", "Main", FormMethod.Post))
{
    @*@Html.EditorForModel();*@

    <div class="w3-justify">
        <div class="form-group">
            @Html.LabelFor(model => model.Mname, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Mname)
                @Html.ValidationMessageFor(model => model.Mname)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Address, new { TextBoxMode = "MultiLine", Columns = "55px", Rows = "10px" })
                @Html.ValidationMessageFor(model => model.Address)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.No_Of_Retailer, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.No_Of_Retailer, new { type = "number", placeholder = " " })
                @Html.ValidationMessageFor(model => model.No_Of_Retailer)
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.OnlineSupplier, new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownList("OnlineSupplier",
                    new SelectList(Enum.GetValues(typeof(choice))),
                    "Select value",
                    new { @class = "form-control", style = "width:175px;height:30px" })

                @*@Html.TextBoxFor(model => model.OnlineSupplier, new { type = "number", placeholder = " " })
                    @Html.ValidationMessageFor(model => model.OnlineSupplier)*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contact_No, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Contact_No, new { type = "number", placeholder = " " })
                @Html.ValidationMessageFor(model => model.Contact_No)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.retailer, new { @class = "control-label col-md-2" })
            <div class="col-md-10" id="container">
                @Html.TextBoxFor(model => model.Contact_No, new { type = "name", placeholder = "Retailer Name" })
            </div> 
                 @*<div id="container" ></div><br />*@
            <div style="margin:inherit">
                @*<p><input type="submit" value="Save" /></p>*@
                <input type="button" id="btnAdd" value="Add New Item" onClick="add()" />
            </div>
          </div>

        <button class="button button1" type="submit" name="BtnPrev" value='Prev' formnovalidate> << PREV</button>
        <button  class="button button2" type="submit" name="BtnNext" value='Next'>NEXT>> </button> 
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}